# Generated by Django 4.2.4 on 2025-07-21 18:08

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ("snowAIWeb", "0053_tradergptforexanalysissession_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AnalysisExecutionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("asset", models.CharField(max_length=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("running", "Running"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True, null=True)),
                ("execution_time_seconds", models.FloatField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="WatchedTradingAsset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asset",
                    models.CharField(
                        choices=[
                            ("EURUSD", "EUR/USD"),
                            ("GBPUSD", "GBP/USD"),
                            ("USDJPY", "USD/JPY"),
                            ("USDCHF", "USD/CHF"),
                            ("AUDUSD", "AUD/USD"),
                            ("USDCAD", "USD/CAD"),
                            ("NZDUSD", "NZD/USD"),
                            ("EURJPY", "EUR/JPY"),
                            ("GBPJPY", "GBP/JPY"),
                            ("EURGBP", "EUR/GBP"),
                            ("AUDJPY", "AUD/JPY"),
                            ("EURAUD", "EUR/AUD"),
                            ("USDCNH", "USD/CNH"),
                            ("GBPAUD", "GBP/AUD"),
                            ("EURCHF", "EUR/CHF"),
                            ("AUDCAD", "AUD/CAD"),
                            ("GBPCAD", "GBP/CAD"),
                            ("EURCAD", "EUR/CAD"),
                        ],
                        max_length=10,
                        unique=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["asset"],
            },
        ),
        migrations.CreateModel(
            name="TraderGPTAnalysisRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("asset", models.CharField(max_length=10)),
                (
                    "market_sentiment",
                    models.CharField(
                        choices=[
                            ("bullish", "Bullish"),
                            ("bearish", "Bearish"),
                            ("neutral", "Neutral"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "confidence_score",
                    models.IntegerField(help_text="Confidence score from 1-100"),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "time_horizon",
                    models.CharField(
                        choices=[
                            ("short", "Short Term (1-7 days)"),
                            ("medium", "Medium Term (1-4 weeks)"),
                            ("long", "Long Term (1-6 months)"),
                        ],
                        max_length=10,
                    ),
                ),
                ("entry_strategy", models.TextField()),
                ("key_factors", models.TextField()),
                (
                    "stop_loss_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "take_profit_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "support_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "resistance_level",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("raw_analysis", models.TextField(help_text="Full GPT response")),
                ("news_data_used", models.JSONField(blank=True, default=dict)),
                ("economic_events_used", models.JSONField(blank=True, default=dict)),
                (
                    "analysis_timestamp",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-analysis_timestamp"],
                "unique_together": {("asset", "analysis_timestamp")},
            },
        ),
    ]
