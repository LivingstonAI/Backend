# Generated by Django 4.2.4 on 2025-09-16 06:08

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("snowAIWeb", "0060_fingerprintstatus"),
    ]

    operations = [
        migrations.CreateModel(
            name="SnowAIBacktestingGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_backtests", models.IntegerField(default=0)),
                ("successful_backtests", models.IntegerField(default=0)),
                ("average_sharpe_ratio", models.FloatField(default=0.0)),
                ("average_annual_return", models.FloatField(default=0.0)),
                ("average_max_drawdown", models.FloatField(default=0.0)),
                (
                    "best_performing_strategy",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "worst_performing_strategy",
                    models.CharField(blank=True, max_length=500),
                ),
                ("most_used_dataset", models.CharField(blank=True, max_length=200)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIConversationHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "gpt_system",
                    models.CharField(
                        choices=[
                            ("TraderHistoryGPT", "TraderHistoryGPT"),
                            ("MacroGPT", "MacroGPT"),
                            ("IdeaGPT", "IdeaGPT"),
                            ("BacktestingGPT", "BacktestingGPT"),
                            ("PaperGPT", "PaperGPT"),
                            ("ResearchGPT", "ResearchGPT"),
                        ],
                        max_length=50,
                    ),
                ),
                ("user_message", models.TextField()),
                ("ai_response", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIIdeaGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_ideas", models.IntegerField(default=0)),
                ("pending_ideas", models.IntegerField(default=0)),
                ("in_progress_ideas", models.IntegerField(default=0)),
                ("completed_ideas", models.IntegerField(default=0)),
                ("most_common_category", models.CharField(blank=True, max_length=200)),
                ("completion_rate", models.FloatField(default=0.0)),
                ("oldest_pending_idea", models.CharField(blank=True, max_length=500)),
                ("newest_idea", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIMacroGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_economic_events", models.IntegerField(default=0)),
                ("high_impact_events_count", models.IntegerField(default=0)),
                ("most_active_currency", models.CharField(blank=True, max_length=10)),
                ("key_market_themes", models.TextField(blank=True)),
                ("upcoming_events_preview", models.TextField(blank=True)),
                ("market_sentiment", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIPaperGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_papers", models.IntegerField(default=0)),
                ("most_common_category", models.CharField(blank=True, max_length=200)),
                ("total_file_size_mb", models.FloatField(default=0.0)),
                ("average_paper_length", models.IntegerField(default=0)),
                ("latest_upload", models.CharField(blank=True, max_length=500)),
                ("research_recommendations", models.TextField(blank=True)),
                ("key_insights", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIResearchGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_research_entries", models.IntegerField(default=0)),
                ("total_papers_analyzed", models.IntegerField(default=0)),
                ("knowledge_gaps_identified", models.TextField(blank=True)),
                ("future_research_directions", models.TextField(blank=True)),
                ("cross_paper_insights", models.TextField(blank=True)),
                ("practical_applications", models.TextField(blank=True)),
                ("research_methodology_suggestions", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SnowAITraderHistoryGPTSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary_text", models.TextField()),
                ("total_trades", models.IntegerField(default=0)),
                ("win_rate", models.FloatField(default=0.0)),
                ("total_profit_loss", models.FloatField(default=0.0)),
                (
                    "best_performing_strategy",
                    models.CharField(blank=True, max_length=200),
                ),
                (
                    "worst_performing_strategy",
                    models.CharField(blank=True, max_length=200),
                ),
                ("most_traded_asset", models.CharField(blank=True, max_length=100)),
                ("average_trade_amount", models.FloatField(default=0.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
