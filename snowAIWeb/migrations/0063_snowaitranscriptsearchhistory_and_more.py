# Generated by Django 4.2.4 on 2025-09-24 07:13

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("snowAIWeb", "0062_gptdiscussion_gptdiscussionmessage"),
    ]

    operations = [
        migrations.CreateModel(
            name="SnowAITranscriptSearchHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("search_query", models.CharField(max_length=500)),
                ("search_filters", models.JSONField(default=dict)),
                ("results_count", models.IntegerField(default=0)),
                ("search_timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "user_session_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "snowai_transcript_search_history",
                "ordering": ["-search_timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SnowAIVideoTranscriptRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transcript_uuid",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                (
                    "youtube_video_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("youtube_url", models.URLField(blank=True, max_length=500, null=True)),
                (
                    "video_title",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "primary_speaker_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "speaker_organization",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "speaker_country_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "speaker_country_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("full_transcript_text", models.TextField()),
                ("video_duration_seconds", models.IntegerField(blank=True, null=True)),
                ("transcript_language", models.CharField(default="en", max_length=10)),
                ("video_upload_date", models.DateTimeField(blank=True, null=True)),
                (
                    "transcription_method",
                    models.CharField(default="youtube_auto", max_length=50),
                ),
                (
                    "transcript_confidence_score",
                    models.FloatField(blank=True, null=True),
                ),
                (
                    "processing_status",
                    models.CharField(default="completed", max_length=30),
                ),
                (
                    "content_category",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("economic_topics", models.JSONField(blank=True, default=list)),
                ("custom_tags", models.JSONField(blank=True, default=list)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived_at", models.DateTimeField(blank=True, null=True)),
                ("word_count", models.IntegerField(default=0)),
                ("sentiment_analysis_score", models.FloatField(blank=True, null=True)),
                ("key_phrases_extracted", models.JSONField(blank=True, default=list)),
            ],
            options={
                "db_table": "snowai_video_transcript_records",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["primary_speaker_name"],
                        name="snowai_vide_primary_122323_idx",
                    ),
                    models.Index(
                        fields=["speaker_country_code"],
                        name="snowai_vide_speaker_632839_idx",
                    ),
                    models.Index(
                        fields=["content_category"],
                        name="snowai_vide_content_517a47_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="snowai_vide_created_caff22_idx"
                    ),
                    models.Index(
                        fields=["video_upload_date"],
                        name="snowai_vide_video_u_ad1d2b_idx",
                    ),
                ],
            },
        ),
    ]
